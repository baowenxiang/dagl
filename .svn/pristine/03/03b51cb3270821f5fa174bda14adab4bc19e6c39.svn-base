package cn.proem.dagl.web.fileUse.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import cn.proem.core.annotation.LogService;
import cn.proem.core.dao.GeneralDao;
import cn.proem.core.model.DataGrid;
import cn.proem.core.model.QueryBuilder;
import cn.proem.dagl.web.archives.entity.DTableName;
import cn.proem.dagl.web.archives.service.CustomArchiveService;
import cn.proem.dagl.web.fileUse.dto.DtoLendBase;
import cn.proem.dagl.web.fileUse.entity.ElectronicLend;
import cn.proem.dagl.web.fileUse.service.ElectronicLendService;
import cn.proem.dagl.web.preArchive.entity.Zlsj;
import cn.proem.suw.web.common.exception.ServiceException;
import cn.proem.suw.web.common.util.StringUtil;
@Service
public class ElectronicLendServiceImpl implements ElectronicLendService {
	@Autowired
	private GeneralDao generalDao;
    @Autowired
	private CustomArchiveService customArchiveService;
	
	@Override
	public DataGrid<DtoLendBase> getElectronicLendList(QueryBuilder queryBuilder, int nowPage, int pageSize) {
		DataGrid<DtoLendBase> dataGrid = new DataGrid<DtoLendBase>(nowPage, pageSize);
		dataGrid.setRecordCount(generalDao.countByCriteria(ElectronicLend.class, queryBuilder));
		
		List<ElectronicLend> list = generalDao.queryByCriteria(ElectronicLend.class, queryBuilder, null,dataGrid.getStartRecord(), dataGrid.getPageSize());
		List<DtoLendBase> dtoLendBases = new ArrayList<DtoLendBase>();
		for(ElectronicLend electronicLend : list){
			DtoLendBase dtoLendBase = new DtoLendBase();
			dtoLendBase.setId(electronicLend.getId());
			dtoLendBase.setBm(electronicLend.getBm());
			DTableName dTableName =  customArchiveService.getDTableNameByTableName(electronicLend.getBm());
			if(dTableName!=null){
				dtoLendBase.setCnbm(dTableName.getZwm());
			}else{
				dtoLendBase.setCnbm("");
			}
			dtoLendBase.setWh(electronicLend.getWh());
			dtoLendBase.setTm(electronicLend.getTm());
			dtoLendBase.setBz(electronicLend.getBz());
			dtoLendBase.setDaid(electronicLend.getDaid());
			dtoLendBase.setDh(electronicLend.getDh());
			dtoLendBase.setJyzt(electronicLend.getJyzt());
			dtoLendBase.setJymd(electronicLend.getJymd());
			dtoLendBase.setJysj(electronicLend.getJysj());
			dtoLendBase.setJyxg(electronicLend.getJyxg());
			dtoLendBase.setJyr(electronicLend.getJyr());
			
			dtoLendBases.add(dtoLendBase);
		}
		dataGrid.setExhibitDatas(dtoLendBases);
		
		return dataGrid;
	}

	@Override
	@Transactional
	@LogService(description = "保存或者修改电子借阅")
	public void saveOrUpdate(ElectronicLend electronicLend)throws ServiceException {
		if (StringUtil.isEmpty(electronicLend.getId())) {
			generalDao.save(electronicLend);
		}else{
			generalDao.update(electronicLend);
		}
		
	}
	
	
	@Override
	@Transactional
	@LogService(description = "删除电子借阅记录")
	public void delete(String id) throws ServiceException {
		ElectronicLend electronicLend = generalDao.findById(id,ElectronicLend.class);
		electronicLend.setDelFlag(1);
		generalDao.update(electronicLend);
	}

	
}
