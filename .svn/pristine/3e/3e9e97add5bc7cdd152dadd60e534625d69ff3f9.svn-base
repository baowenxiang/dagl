package cn.proem.dagl.web.temperature.service.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.xml.rpc.ServiceException;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import cn.proem.core.annotation.LogService;
import cn.proem.core.dao.GeneralDao;
import cn.proem.core.model.DataGrid;
import cn.proem.core.model.Order;
import cn.proem.core.model.OrderType;
import cn.proem.core.model.QueryBuilder;
import cn.proem.dagl.web.temperature.service.TemperatureService;
import cn.proem.suw.web.common.util.StringUtil;
import cn.proem.suw.web.temperature.entity.DWsd;
@Service
public class TemperatureServiceImpl implements TemperatureService {
	@Resource
	private GeneralDao generalDao;
	@Override
	public DataGrid<DWsd> getRecordList(QueryBuilder queryBuilder, int nowPage,
			int pageSize) {
		DataGrid<DWsd> dataGrid = new DataGrid<DWsd>(nowPage, pageSize);
		dataGrid.setRecordCount(generalDao.countByCriteria(
				DWsd.class, queryBuilder));
		//数据集合
		List<DWsd> list = generalDao.queryByCriteria(
				DWsd.class, 
				queryBuilder, 
				new Order[]{new Order("jlrq",OrderType.DESC)}, 
				0, -1);

		dataGrid.setExhibitDatas(list);
		return dataGrid;
	}
	@Override
	@Transactional
	@LogService(description = "修改温湿度记录")
	public void update(DWsd dwsd) {
		if(StringUtil.isEmpty(dwsd.getId())) {
			try {
				throw new ServiceException("数据为空");
			} catch (ServiceException e) {
				e.printStackTrace();
			}
		}
		generalDao.update(dwsd);
	}
	@Override
	@Transactional
	@LogService(description = "删除温湿度记录")
	public void delete(String id)
			throws cn.proem.suw.web.common.exception.ServiceException {
		if(StringUtil.isEmpty(id)) {
			try {
				throw new ServiceException("ID不能为空");
			} catch (ServiceException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		generalDao.delete(generalDao.findById(id, DWsd.class));
	}
	public List<Map<String, Object>> getDataList(String year,String  month) {
		List<Map<String,Object>> list = new ArrayList<Map<String,Object>>();
		Map<String,Object> wdmapList = new HashMap<String,Object>();
		Map<String,Object> sdmapList = new HashMap<String,Object>();
		if(StringUtil.isEmpty(month)) {	//判断参数month是否为空
//			list = this.getTotalNumByCarTypeAndYear(carType,year);	
//			for(Map<String,Object> map : list) {
//				mapList.put(String.valueOf(map.get("months")), map.get(param));
//			}
		}else {
//			String sql = "SELECT * FROM man_dabg_wsd WHERE TO_CHAR(jlrq, 'yyyy-MM')='" + year + "-" + month + "' ORDER BY JLRQ";
			if(month.length() < 2) {
				month = "0" + month;
			}
			String sql = "SELECT MT.\"day_num\" day, NVL(wd,0) as wd, NVL (sd, 0) as sd "
					+ "FROM \"pdagl_day\" MT LEFT JOIN( "
					+ "SELECT T.*, TO_CHAR (jlrq, 'dd') M FROM "
					+ "( SELECT * FROM man_dabg_wsd "
					+ "WHERE TO_CHAR (jlrq, 'yyyy-MM') = '" + year + "-" + month + "' "
					+ "ORDER BY JLRQ ) T ) T "
					+ "ON T.M = MT.\"day_num\" "
					+ "ORDER BY MT.\"day_num\"";
			//获取指定年月的所有温湿度记录
			List<Map<String,Object>> dwsdMaps = generalDao.getObjectList(sql, 0, -1, new Object[]{});
			for(Map<String,Object> map : dwsdMaps) {
				wdmapList.put(String.valueOf(map.get("DAY")), String.valueOf(map.get("WD")));
				sdmapList.put(String.valueOf(map.get("DAY")), String.valueOf(map.get("SD")));
			}
			list.add(wdmapList);
			list.add(sdmapList);
		}
		return list;
	}
	@Override
	public List<Map<String, Object>> getDataByWeek(String week) {
		List<Map<String,Object>> list = new ArrayList<Map<String,Object>>();
		Map<String,Object> wdmapList = new HashMap<String,Object>();
		Map<String,Object> sdmapList = new HashMap<String,Object>();
		String startDate = week.split(" ")[0];
		String endDate = week.split(" ")[1];
		String sql = "SELECT MT.\"week\", jlrq, NVL(wd, 0) as wd, NVL (sd, 0) as sd "
				+ "FROM \"pdagl_week\" MT LEFT JOIN ( "
				+ "SELECT T.*, to_char(jlrq,'D') M FROM ("
				+ "SELECT * FROM MAN_DABG_WSD WHERE \"TO_CHAR\"(jlrq,'yyyy-MM-dd')	"
				+ "BETWEEN '" + startDate + "' AND '" + endDate + "' ) T ) T "
				+ "ON T.M = MT.\"week\"  AND T.WSDSJ = MT.\"time\" "
				+ "ORDER BY MT.\"week\",MT.\"time\" DESC";
		//获取指定日期范围的温湿度记录
		List<Map<String,Object>> dwsdMaps = generalDao.getObjectList(sql, 0, -1, new Object[]{});
//		for(Map<String,Object> map : dwsdMaps) {
		for(int i = 2;i<dwsdMaps.size();i++) {
			wdmapList.put(String.valueOf(i), String.valueOf(dwsdMaps.get(i).get("WD")));
			sdmapList.put(String.valueOf(i), String.valueOf(dwsdMaps.get(i).get("SD")));
			wdmapList.put(String.valueOf(dwsdMaps.size()), String.valueOf(dwsdMaps.get(0).get("WD")));
			sdmapList.put(String.valueOf(dwsdMaps.size()), String.valueOf(dwsdMaps.get(0).get("SD")));
			wdmapList.put(String.valueOf(dwsdMaps.size() + 1), String.valueOf(dwsdMaps.get(1).get("WD")));
			sdmapList.put(String.valueOf(dwsdMaps.size() + 1), String.valueOf(dwsdMaps.get(1).get("SD")));
		}
		list.add(wdmapList);
		list.add(sdmapList);
		return list;
	}
}
