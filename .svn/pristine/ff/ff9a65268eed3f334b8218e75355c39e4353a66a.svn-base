package cn.proem.dagl.web.tj.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.serializer.SerializerFeature;

import cn.proem.core.entity.User;
import cn.proem.core.entity.UserDepartment;
import cn.proem.dagl.web.tj.dto.GCLdto;
import cn.proem.dagl.web.tj.entity.GclOrder;
import cn.proem.dagl.web.tj.service.TJService;
import cn.proem.suw.web.common.exception.ServiceException;
import cn.proem.suw.web.common.model.BaseCtrlModel;
import cn.proem.suw.web.common.service.CommonService;

@Controller
@RequestMapping(value = "/w/tj")
public class TJController extends BaseCtrlModel {
    @Autowired
    private TJService tjservice;
    @Autowired
    private CommonService commonService;
    
    /**
     * @Method: init 
     * @Description: 室藏量初始化页面
     * @return
     */
    @RequestMapping(value = "/init")
    public ModelAndView init(){
        ModelAndView modelAndView = this.createNormalView("/web/tj/gcl.vm");
        return modelAndView;
    }
    
    /**
     * @Method: order 
     * @Description: 保存修改后的排序
     * @param request
     * @param ord
     * @param type
     * @return
     * @throws ServiceException
     */
    @RequestMapping(value = "/order")
    public ModelAndView order(HttpServletRequest request, @RequestParam("ord[]") List<String> ord, @RequestParam("type") String type) throws ServiceException{
        ModelAndView modelAndView = this.createNormalView("/web/tj/gcl.vm");
        User user = this.getCurrentUser(request);
        String company = "";
        UserDepartment userdepartment = commonService.findUserDepartmentByUserId(user.getId());
        if(userdepartment != null){
            company = userdepartment.getDepartment() != null ? userdepartment.getDepartment().getId() : "";
            tjservice.tjGclSaveOrUpdate(ord, type, company);
        }
        return modelAndView;
    }
    
    /**
     * @Method: gcl 
     * @Description: 室藏量统计
     * @param request
     * @param type
     * @return
     * @throws ServiceException
     */
    @RequestMapping(value = "/gcl")
    @ResponseBody
    public GCLdto gcl(HttpServletRequest request, @RequestParam String type) throws ServiceException{
        GCLdto gcl = new GCLdto();
        User user = this.getCurrentUser(request);
        String department = "";
        UserDepartment userdepartment = commonService.findUserDepartmentByUserId(user.getId());
        if(userdepartment != null){
            department = userdepartment.getDepartment() != null ? userdepartment.getDepartment().getId() : "";
        }
        List<Map<String, Object>> gclwjlist = null;
        List<Map<String, Object>> gclajlist = null;
        List<Map<String, Object>> ndhlist = null;
        List<GclOrder> gclordlist = null;
        if("all".equals(type)){
            gclwjlist = tjservice.tjWjGcl(department);
            gclajlist = tjservice.tjAjGcl(department);
            ndhlist = tjservice.tjNdhArea(department);
        }else{
            gclwjlist = tjservice.tjWjGclA(department);
            gclajlist = tjservice.tjAjGclA(department);
            ndhlist = tjservice.tjNdhAreaA(department);
        }
        gclordlist = tjservice.tjGclFind(type, department);
        List<String> ord = new ArrayList<String>();
        for(GclOrder gclord : gclordlist){
            ord.add(gclord.getYwm());
        }
        if(gclwjlist != null && gclwjlist.size() > 0) gcl.setGclwj(gclwjlist);
        if(gclajlist != null && gclajlist.size() > 0) gcl.setGclaj(gclajlist);
        if(ndhlist != null && ndhlist.size() > 0) gcl.setNdhArea(ndhlist);
        if(ord != null && ndhlist.size() > 0) gcl.setOrd(ord);
        return gcl;
    }
    
    
    /**
     * @Method: init 
     * @Description: 自定义统计
     * @return
     * @throws ServiceException 
     */
    @RequestMapping(value = "/design")
    public ModelAndView design(HttpServletRequest request) throws ServiceException{
        ModelAndView modelAndView = this.createNormalView("/web/tj/design.vm");
        User user = this.getCurrentUser(request);
        String company = "";
        UserDepartment userdepartment = commonService.findUserDepartmentByUserId(user.getId());
        if(userdepartment != null){
            company = userdepartment.getDepartment() != null ? userdepartment.getDepartment().getId() : "";
        }
        
        // 门类
        List<String> ml = tjservice.designMl(company);
        // 年度
        List<String> nd = tjservice.designNd(company);
        // 保管期限
        List<String> bgqx = tjservice.designBgqx(company);
        // 密级
        List<String> mj = tjservice.designMj(company);
        modelAndView.addObject("mls", ml);
        modelAndView.addObject("bgqxs", bgqx);
        modelAndView.addObject("mjs", mj);
        modelAndView.addObject("nds", nd);
        return modelAndView;
    }
    
    
}
