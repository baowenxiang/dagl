package cn.proem.dagl.web.fileTransfer.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.serializer.SerializerFeature;

import cn.proem.core.annotation.LogService;
import cn.proem.core.model.ConditionType;
import cn.proem.core.model.DataGrid;
import cn.proem.core.model.DataGridQuery;
import cn.proem.core.model.FieldType;
import cn.proem.core.model.QueryBuilder;
import cn.proem.core.model.QueryCondition;
import cn.proem.dagl.web.fileControl.entity.FileControl;
import cn.proem.dagl.web.fileControl.service.FileControlService;
import cn.proem.dagl.web.fileTransfer.entity.TransferRecorder;
import cn.proem.dagl.web.fileTransfer.service.FileTransferService;
import cn.proem.suw.web.common.model.BaseCtrlModel;

@Controller
@RequestMapping("/w/fileTransfered")
public class TransferedFileController extends BaseCtrlModel {
	
	@Autowired
	private FileTransferService fileTransferService;
	
	
	/**
	 * 初始化已移交档案页面
	 * @return
	 */
	@RequestMapping("/initview")
	public ModelAndView initFileControlView(){
		
		ModelAndView view = this.createNormalView("/web/fileTransfer/transferedInitView.vm");
		
		return view;
		
	}
	
	/**
	 * 获取公开档案列表
	 */
	@RequestMapping("/getTransferedFileList")
	@ResponseBody
	@LogService(description = "获取公开档案列表")
	public String getTransferedFileList(String dtGridPager, HttpServletRequest request){
		DataGridQuery query = this.parseToQuery(dtGridPager == null ? "" : dtGridPager);
		QueryBuilder queryBuilder = query.generateQueryBuilder();
		queryBuilder.addCondition(new QueryCondition("delFlag",Integer.parseInt("0"),ConditionType.EQ,FieldType.INTEGER,null));
		DataGrid<TransferRecorder> dataGrid = fileTransferService.getTransferedFileDataGrid(queryBuilder,query.getNowPage(),query.getPageSize());
		//dataGrid.getExhibitDatas();

		return JSON.toJSONStringWithDateFormat(dataGrid, "yyyy-MM-dd HH:mm:ss", SerializerFeature.WriteDateUseDateFormat,SerializerFeature.DisableCircularReferenceDetect);
		
	}

}
